#!/bin/bash
#
# remotecontrol
# 2019-01-12 Tom Wizetek
#
# Assign actions to a wireless remote
# FM4 2.4GHz USB / air mouse (from AliExpress)
# Control things on a headless Raspberry Pi
#
# Requires the 'evtest' package installed

input_device='/dev/input/by-id/usb-DHS_USB_DOGLE-event-kbd'

button_power="*type 1 (EV_KEY), code 116 (KEY_POWER), value 1"
button_home="*type 1 (EV_KEY), code 172 (KEY_HOMEPAGE), value 1"
button_up="*type 1 (EV_KEY), code 103 (KEY_UP), value 1"
button_up_hold="*type 1 (EV_KEY), code 103 (KEY_UP), value 2"
button_down="*type 1 (EV_KEY), code 108 (KEY_DOWN), value 1"
button_down_hold="*type 1 (EV_KEY), code 108 (KEY_DOWN), value 2"
button_left="*type 1 (EV_KEY), code 105 (KEY_LEFT), value 1"
button_left_hold="*type 1 (EV_KEY), code 105 (KEY_LEFT), value 2"
button_right="*type 1 (EV_KEY), code 106 (KEY_RIGHT), value 1"
button_right_hold="*type 1 (EV_KEY), code 106 (KEY_RIGHT), value 2"
button_enter="*type 1 (EV_KEY), code 28 (KEY_ENTER), value 1"
button_compose="*type 1 (EV_KEY), code 127 (KEY_COMPOSE), value 1"
button_esc="*type 1 (EV_KEY), code 1 (KEY_ESC), value 1"
button_voldown="*type 1 (EV_KEY), code 114 (KEY_VOLUMEDOWN), value 1"
button_voldown_hold="*type 1 (EV_KEY), code 114 (KEY_VOLUMEDOWN), value 2"
button_volup="*type 1 (EV_KEY), code 115 (KEY_VOLUMEUP), value 1"
button_volup_hold="*type 1 (EV_KEY), code 115 (KEY_VOLUMEUP), value 2"

evtest ${input_device} | while read line; do
	case ${line} in
		${button_power})
			audio.sh --noise
			;;
		${button_home})
			audio.sh --cycle
			;;
		${button_up})
			echo "Up"
			;;
		${button_up_hold})
			echo "holding Up"
			;;
		${button_down})
			echo "Down"
			;;
		${button_down_hold})
			echo "holding Down"
			;;
		${button_left})
			echo "Left"
			;;
		${button_left_hold})
			audio.sh --piano-jack
			;;
		${button_right})
			echo "Right"
			;;
		${button_right_hold})
			audio.sh --rompler-jack
			;;
		${button_enter})
			audio.sh --midi
			;;
		${button_compose})
			audio.sh --piano
			;;
		${button_esc})
			audio.sh --rompler
			;;
		${button_voldown})
			amixer -q set PCM 1dB-
			;;
		${button_voldown_hold})
			#amixer -q set PCM 0%
			amixer -q set PCM 1dB-
			;;
		${button_volup})
			amixer -q set PCM 1dB+
			;;
		${button_volup_hold})
			amixer -q set PCM 1dB+
			;;
	esac
done

# eof
