#!/bin/bash

# vmboot: QEMU VM launch wrapper
# config: ~/.config/vmbootrc
# 2021-09-04 Tom Wizetek <tom@wizetek.com>

CFG="${HOME}/.config/$(basename ${0})rc"

# Read config file
if [[ -r ${CFG} ]]; then
source ${CFG}

# If config file is not found, generate it
elif [[ ! -f ${CFG} ]]; then
cat > ${CFG} << ENDCFGFILE
# ${CFG}
# $(basename ${0}) configuration file

CMD="/usr/bin/qemu-system-x86_64"
CPU="-enable-kvm -cpu host"
#OPT="-enable-kvm -cpu host -action panic=pause"
SMP="-smp 2"
RAM="-m 4G"
# Static
#MAC="52:54:00:01:02:03"
# Random
MAC=\$( printf "52:54:%02x:%02x:%02x:%02x" \$(( \${RANDOM} & 0xff )) \$(( \${RANDOM} & 0xff )) \$(( \${RANDOM} & 0xff)) \$(( \${RANDOM} & 
0xff )) )
NIC="-nic mac=\${MAC}"
#SND="-soundhw hda"
SND="-device AC97"
ENDCFGFILE

echo "Created ${CFG}"
exec ${0}

else
echo "Failed to create ${CFG}"
exit 1
fi

# If first argument is a switch instead of file name, handle it
case ${1} in

-)
shift
exec ${CMD} ${@}
;;

-raw)
EXT=".raw"
shift
;;

-cd)
EXT=".iso"
shift
;;

-h|"")
cat << ENDSHORTHELP

Basic usage:

  $(basename ${0}) diskimage.img

QEMU options used automatically based on file extension:
  -cdrom	for .iso
  -hda		for .qcow2 .vdi .vmdk .vhdx .img ...
  -drive file=	for .raw

For advanced usage type: $(basename ${0}) --help

ENDSHORTHELP
exit 0
;;

--help|-help|help)
cat << ENDLONGHELP

  $(basename ${0}) [-|-raw|-cd] diskimage.img [-opt] [-opt] [...]

Optional first switch:
  -		Pass everything that follows directly to QEMU
  -raw		Force raw format for disk image
  -cd		Force cdrom medium for disk image

Some common QEMU [-opt]ions:
  -boot d		a b (FDD1 FDD2), c d (HDD1 HDD2), d (CDROM), n (NIC)
  -boot c,once=d
  -nic hostfwd=tcp::5022-:22
  -nic hostfwd=tcp::6001-:6000
  -nic hostfwd=tcp::5555-:3389
  -nic bridge,mac=52:54:00:12:34:56
  -nic model=virtio-net-pci
  -nic none		No network
  -nic,model=?		List supported NIC models
  -soundhw ?		List supported sound cards
  -device ?		List all available devices by type
  -device usb-tablet	(Prevents mouse grab)
  -device VGA,edid=on,xres=1366,yres=768
  -loadvm <tag>		Load saved state from snapshot
  -snapshot		Don't write changes to disk image (can still 'commit all' in Monitor)
  -S			Start paused
  -no-shutdown		Don't exit on shutdown
  -no-quit		Don't allow closing window
  -vnc :1		Video output to VNC server display :1 (password set in Monitor)
  -vnc :0,to=9,lossy=on	Try :0, :1, :2, :3, ... until :9; use lossy JPEG compression
  -display none		No video output to user (guest still has video)
  -nographic		No GUI / command line only (output and Monitor in host console)
  -monitor stdio	Monitor in host console
  -monitor telnet:127.0.0.1:5023,server,nowait
  -daemonize		Detach process from stdio
  -name			Set name for window title and VNC

For more QEMU options type: $(basename ${0}) - --help

ENDLONGHELP
exit 0
;;

esac

# If not forcing disk type via first switch, get file extension .123 characters
if [[ ${EXT} == "" ]]; then
EXT="${1:(-4)}"
fi

# If any QEMU switches are supplied, override the corresponding default options
for ARG in ${@}; do
case $ARG in

-smp)
SMP=""
;;

-m)
RAM=""
;;

-nic)
NIC=""
;;

# Caveat: '-device' may not be a sound card
-soundhw|-device)
SND=""
;;

-name)
NAM=""
;;

esac
done

# Recognize .raw and .iso simply by name
case ${EXT} in

.raw)
DSK="-drive format=raw,file="
;;

.iso)
DSK="-cdrom "
;;

*)
DSK="-hda "
;;

esac

IMG="${1}"
NAM="$(basename -a ${1} 2>/dev/null)"
shift
echo ${CMD} ${CPU} ${SMP} ${RAM} ${NIC} ${SND} ${@} ${DSK}\"${IMG}\"

# Execute based on whether '-name' is specified
if [[ ${NAM} == "" ]]; then
${CMD} ${CPU} ${SMP} ${RAM} ${NIC} ${SND} ${@} ${DSK}"${IMG}"
else
${CMD} ${CPU} ${SMP} ${RAM} ${NIC} ${SND} ${@} -name "${NAM}" ${DSK}"${IMG}"
fi

##
